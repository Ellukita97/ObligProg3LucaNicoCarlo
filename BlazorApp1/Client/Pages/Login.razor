@page "/LoginRegistrer"

@inject HttpClient httpClient
@using BlazorApp1.Client.Extenciones
@using BlazorApp1.Shared
@using Microsoft.AspNetCore.Components.Authorization

@inject AuthenticationStateProvider autenticacionProvider
@inject NavigationManager navManager

<div class="Login-container">
    @if(logins)
    {
        <EditForm Model="login" OnValidSubmit="IniciarSesion">
        <DataAnnotationsValidator/>
        <div class="col-ig-4 border Login Form-Login">
            <div class="mb-3 text-center text-white">
                <h3>LOGIN</h3>
            </div>

            <div class="mb-3 text-white">
                <label>Correo</label>
                <input @bind="login.Email" class="form-control"/>
                <ValidationMessage For="@(()=>login.Email)" />
            </div>

            <div class="mb-3 text-white">
                <label>Contraseña</label>
                <input @bind="login.Password" class="form-control" type="password" />
                <ValidationMessage For="@(()=>login.Password)" />
            </div>
            <div class="mb-3 text-white">
                <label>@ErrorMensaje</label>
            </div>
            <div class="mb-3 text-white">
                <button class="btn btn-primary" type="submit">Login</button>
                <a class="link-LoginRegistrer" @onclick="LoginRegistrer">No tienes cuenta?</a>
            </div>
        </div>
        </EditForm>
    }
    else
    {
        <EditForm Model="UsuarioRegister" OnValidSubmit="SignUp">
            <DataAnnotationsValidator />
       
        <div class="col-ig-4 border Login Form-Registrer">
            <div class="mb-3 text-center text-white">
                <h3>Registrer</h3>
            </div>

            <div class="mb-3 text-white">
                <label>Nombre</label>
                <input @bind="UsuarioRegister.Nombre" class="form-control"/>
                    <ValidationMessage For="@(()=>UsuarioRegister.Nombre)" />
            </div>

            <div class="mb-3 text-white">
                <label>Email</label>
                <input @bind="UsuarioRegister.Email" class="form-control" />
                    <ValidationMessage For="@(()=>UsuarioRegister.Email)" />
            </div>

            <div class="mb-3 text-white">
                <label>Password</label>
                <input type="password"  @bind="UsuarioRegister.Password" class="form-control" />
                    <ValidationMessage For="@(()=>UsuarioRegister.Password)" />
            </div>

            <div class="mb-3 text-white">
                <label>Fecha de nacimiento</label>
                <input @bind="UsuarioRegister.FechaNacimiento" class="form-control" />
                    <ValidationMessage For="@(()=>UsuarioRegister.FechaNacimiento)" />
            </div>

             <div class="mb-3 text-white">
                <label>Telefono</label>
                <input @bind="UsuarioRegister.Tel" class="form-control" />
                    <ValidationMessage For="@(()=>UsuarioRegister.Tel)" />
            </div>

            <div class="mb-3 text-white">
                <button type="submit" class="btn btn-primary">Registrarse</button>
                <a class="link-LoginRegistrer" @onclick="LoginRegistrer">Tienes cuenta?</a>
            </div>
        </div>
       </EditForm>
    }
    
</div>


@code {
    private bool logins = true;

    private string ErrorMensaje = "";

    private void LoginRegistrer()
    {
        logins = !logins;
    }

    private LoginDTO login = new LoginDTO();

    private async Task IniciarSesion()
    {
        var loginRsponse = await httpClient.PostAsJsonAsync<LoginDTO>("/api/Usuario/Login", login);
        if (loginRsponse.IsSuccessStatusCode)
        {
            var sesionUsuario = await loginRsponse.Content.ReadFromJsonAsync<SesionDTO>();
            var autenticacionExt = (AutentificacionExtencion)autenticacionProvider;
            await autenticacionExt.ActualizarEstadoAutenticacion(sesionUsuario);

            navManager.NavigateTo("/");

        }
        else
        {
            ErrorMensaje = "Usuario no existe";
        }

    }

    private Usuario UsuarioRegister = new(DateTime.Now,"Usuario");   

    private async Task SignUp()
    {
         var HttpRequest = await httpClient.PostAsJsonAsync("api/Usuario/Register", UsuarioRegister);

         if (HttpRequest.IsSuccessStatusCode)
         {
             navManager.NavigateTo("/");
         }
    }

}
<style>
    .Login-container{
        width:100%;
        height:80vh;
        display:flex;
        justify-content:center;
    }
    .Login{
        width:500px;
    }
    .Form-Login{
        display:absolute;
        padding:20px;
        box-sizing:border-box;
    }
    .Form-Registrer{
        display:absolute;
        padding:20px;
        box-sizing:border-box;
    }
    .link-LoginRegistrer{
        cursor:pointer;
        color: #606060;
    }
    .link-LoginRegistrer:hover{
        color:white;
    }
</style>