@page "/peliculas"
@using BlazorApp1.Client.Services;
@using BlazorApp1.Shared
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject PeliculasService peliculasService
@inject GenerosService generosService
@inject ProyeccionesService proyeccionesService

<PageTitle> Peliculas</PageTitle>

@if (peliculasService.ListaPeliculas.Count==0 || generosService.ListaGeneros.Count==0)
{
    <div class="loading">
        <div class="spinner-border  text-light" role="status">
        </div>
    </div>
}
else
{
    <div class="Maincontainer">
        <div>
            <div>
                <nav class="flex-column Genero-container">
                    <button class="Button-Genero" @onclick="e=>peliculasService.GetListaPeliculas()">Reset</button>
                    @foreach (Genero item in generosService.ListaGeneros)
                    {
                    
                    <button class="Button-Genero" @onclick="e=>peliculasService.GetPeliculasPorGenero(item.Nombre)">@item.Nombre</button>
                    
                    }
                </nav>
            </div>
        </div>
        <div class="ContainerPeliculas">

            @foreach (Pelicula item in peliculasService.ListaPeliculas)
            {
                <img src=@item.PeliculaUrlImagen class="Peliculas scale-up-vertical-center" id="@item.IdPelicula" @onclick="@(e => SeleccionarPelicula(item.IdPelicula))"/>
            }
            <div class="Footer-images">

            </div>
        </div>
        <div class="Details2">
            <div class="Details">

                <img src="@peliculasService.PeliculaSeleccionada?.PeliculaUrlImagen" class="imagePelicula" />

                <div class="ContainerInfoPelicula">
                    <h2 class="TituloPelicula">@peliculasService.PeliculaSeleccionada?.Nombre</h2>
                    <div class="row-generos">
                        @if (peliculasService.ListaGenerosDePelSeleccionada.Count > 0)
                        {
                            @foreach (Genero unGenero in peliculasService.ListaGenerosDePelSeleccionada)
                            {
                              <p class="generos">@unGenero.Nombre</p>
                            }
                        }
                    </div>
                    <span></span>
                    <span>calificacion: @peliculasService.PeliculaSeleccionada?.Clasificacion</span>
                    <div class="Container-sinoProyec">
                    <span class="Sinopsis"> @peliculasService.PeliculaSeleccionada?.Sinopsis</span>
                    <section>
                    @if(proyeccionesService.ListaProyecciones.Count > 0)
                    {
                    <div class="Proyeccion-container">
                        <span>Proyecciones</span>
                        @foreach (Proyeccion unaP in proyeccionesService.ListaProyecciones)
                        {
                            <div class="Proyecciones">
                                <span>Proyeccion: </span>
                                <span>Fecha: @unaP.FechaHora.ToString("dd/MM/yyyy")</span>
                                <span>Hora: @unaP.FechaHora.ToString("t")</span>
                                <span>$@unaP.Monto</span>
                            </div>
                        }
                    </div>
                    }
                    else
                    {
                        <span>No hay Proyecciones</span>                   
                    }

                        </section>
                    </div>
                </div>
            </div>
        </div>

    </div>
}

@code {
    private async Task SeleccionarPelicula (int id)
    {
        try
        {
            if (peliculasService.PeliculaSeleccionada.IdPelicula != id)
            {
                peliculasService.SeleccionarPelicula(id);
                await peliculasService.GetGenerosDePelicula(id);
                proyeccionesService.ListaProyecciones.Clear();
                await proyeccionesService.GetListaProyeccion(id);   
            }
        }catch(Exception ex)
        {
            Console.WriteLine(ex.Message);
        }

    }
    protected override async Task OnInitializedAsync()
    {
        await peliculasService.GetListaPeliculas();
        await generosService.GetListaGeneros();
        await peliculasService.GetGenerosDePelicula(peliculasService.ListaPeliculas[0].IdPelicula);
        peliculasService.SeleccionarPelicula(peliculasService.ListaPeliculas[0].IdPelicula);
        await proyeccionesService.GetListaProyeccion(peliculasService.ListaPeliculas[0].IdPelicula);
    }

    private void UpdatePage()
    {
        StateHasChanged();
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender) peliculasService.DataChanged += UpdatePage;
    }

    
}


<style>
    .Peliculas{
        height: 400px;
        width: 250px;
        margin: 9px 8px 8px 8px;
        cursor:pointer;
        outline: 1px solid #373737;
    }
    .Peliculas:hover{
        transform:scale(1.05);
        transition:.2s;
    }
    .Details{
        position: fixed;
        height:820px;
        right:0;
        border: 1px solid #373737;
        overflow:hidden;
        margin:5px;
        
    }
    .Details2{
        min-width:435px;
        display:flex;
        align-items:center;
        height:86vh;
        justify-content:center;
    }
    .Maincontainer{
        min-height:90vh;
        display:flex;
        justify-content:space-between;
    }
    .containerPeliculas{
        display:flex;
        flex-wrap:wrap;
        padding-bottom:10px;
    }
    .Footer-images{
        height:25px;
    }
    .imagePelicula{
        width:435px;
        height:88vh;
        background-size:cover;
        filter: blur(4px) brightness(70%);
        opacity:1.5;
        z-index:-1;
        
    }
    .ContainerInfoPelicula{
        position:absolute;
        z-index:100;
        top: 30px;
        left:15px;
        color:white;
        display:flex;
        flex-direction:column;
        box-sizing: border-box;
        padding-right: 20px;
    }
    .Genero-container{
        padding-left:5px;
        padding-top:10px;
        width:120px;
    }
    .Button-Genero{
        margin:5px 0px 5px 0px;
        width:100%;
        background-color: black;
        color: #676666;
        border: 1px solid #373737; 
    }
    .Button-Genero:hover{
         color: white;
        border: 1px solid white; 
    }
    .TituloPelicula{
        font-size:35px;
        text-shadow: 1px 1px 2px black;
    }
    .Sinopsis{
        font-size:20px;
        text-shadow: 1px 1px 2px black;
        margin-top:40px;
        margin-bottom:40px;
    }
    .loading{
        display:flex;
        justify-content:center;
        align-items:center;
        height:80vh;
        
    }
    .Proyeccion-container{
        padding:10px;
        height:300px;
        overflow-y:scroll;
    }
    .Proyecciones{
        border:1px solid white;
        margin:5px;
        cursor: pointer;
    }
     .Proyecciones:hover{
        background-color: white;
        color:black;
     }
     .Container-sinoProyec{
        display:flex;
        flex-direction:column;
        justify-content: space-between;
        height: 700px;
        
     }
    .scale-up-vertical-center{
        animation:scale-up-vertical-center 0.4s
    } 
    @@keyframes scale-up-vertical-center{
        0%{
            transform:scaleY(.2)
        }
        100%{
            transform:scaleY(1)
        }
    }

    .row-generos{
        display:flex;
        flex-direction:row;
    }
    .generos{
        margin-right:10px;
    }

</style>