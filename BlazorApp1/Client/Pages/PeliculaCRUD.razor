@page "/Crud/Pelicula"
@using BlazorApp1.Client.Services;
@using BlazorApp1.Shared
@inject HttpClient Http
@inject PeliculasService peliculasService
@inject NavigationManager navManager
@using Microsoft.AspNetCore.Authorization;
@attribute [Authorize(Roles="Administrador")]

<PageTitle>Counter</PageTitle>

<div class="d-flex justify-content-center">
    <img class="Portada-fondo" src="@PeliculaCreada.PeliculaUrlPortada"/>
    <EditForm Model="PeliculaCreada" OnValidSubmit="AgregarPelicula">
        <DataAnnotationsValidator/>
        <div class="col-ig-4 border Login Form-Registrer">
            <div class="mb-3 text-center text-white">
                <h3>Crear Pelicula</h3>
            </div>

            <div class="mb-3 text-white">
                <label>Nombre</label>
                <input class="form-control" @bind="PeliculaCreada.Nombre" />
                <ValidationMessage For="@(()=>PeliculaCreada.Nombre)" />
            </div>

            <div class="mb-3 text-white">
                <label>Sinopsis</label>
                <input class="form-control" @bind="@PeliculaCreada.Sinopsis" />
                <ValidationMessage For="@(()=>PeliculaCreada.Sinopsis)" />
            </div>

            <div class="mb-3 text-white">
                <label>Clasificacion</label>
                <input class="form-control" @bind="PeliculaCreada.Clasificacion" />
                <ValidationMessage For="@(()=>PeliculaCreada.Clasificacion)" />
            </div>

            <div class="mb-3 text-white">
                <label>Url Imagen de Pelicula</label>

                <input class="form-control"  @onchange="e => CheckUrlValid(e.Value.ToString())" />
                <ValidationMessage For="@(()=>PeliculaCreada.PeliculaUrlImagen)" />
                <div class="d-flex justify-content-center">

                    <img src="@PeliculaCreada.PeliculaUrlImagen" class="img-Pelicula" />
                </div>
                @if (UrlImageValid == false)
                {
                    <h4 class="alert-danger text-center">Url de la imagen no valida</h4>
                }
                    
                
                
            </div>
            <label class="text-info">Opcional</label>
             <div class="mb-3 text-white">
                <label>Portada</label>
                <input class="form-control" @bind="PeliculaCreada.PeliculaUrlPortada" />
            </div>

            <div class="mb-3 text-white">
                <button type="submit" class="btn btn-primary">Crear</button>
            </div>
        </div>
        
    </EditForm>
    <div class="Pelicula-card text-white d-flex flex-column justify-content-center">
        <div class="Pelicula-card-container">
            <img class="Pelicula-card-imge" src="@PeliculaCreada.PeliculaUrlImagen"/>
            <div class="Pelicula-card-info d-flex flex-column">
                <h2 class="TituloPelicula">@PeliculaCreada?.Nombre</h2>
                <span>calificacion: @PeliculaCreada?.Clasificacion</span>
                <span class="Sinopsis"> @PeliculaCreada?.Sinopsis</span>
            </div>
        </div>
    </div>

</div>
@code{
    Pelicula PeliculaCreada = new();
    bool UrlImageValid = false;
    //@bind="PeliculaCreada.PeliculaUrlImagen"
    private async Task AgregarPelicula()
    {
        try
        {
            if (UrlImageValid)
            {
                PeliculaCreada.PeliculaUrlPortada = PeliculaCreada.PeliculaUrlPortada == null ? "" : PeliculaCreada.PeliculaUrlPortada;
                var res = await peliculasService.PostPelicula(PeliculaCreada);
                if (res.IsSuccessStatusCode)
                {
                    navManager.NavigateTo("/Peliculas");
                }
            }

        }
        catch
        {

        }
    }
    private async Task CheckUrlValid(string UrlImage)
    {
        PeliculaCreada.PeliculaUrlImagen = UrlImage;

        var resUrlImage = await Http.GetAsync(PeliculaCreada.PeliculaUrlImagen);
        if (resUrlImage.IsSuccessStatusCode)
        {
            UrlImageValid = true;
        }
        else
        {
            UrlImageValid = false;
        }
    }
}




<style>
    .Portada-fondo{
        position: absolute;
        z-index: -1;
        width: 100vw;
        opacity: 0.3;
        height: 89.6vh;
        filter: blur(4px);
    }
    .Login-container{
        width:100%;
        height:100%;
        display:flex;
        justify-content:center;
    }
    .Login{
        width:500px;
    }
    .Form-Login{
        display:absolute;
        padding:20px;
        box-sizing:border-box;
    }
    .Form-Registrer{
        display: absolute;
        padding: 20px;
        box-sizing: border-box;
        height: 850px;
        margin-top: 10px;
    }
    .link-LoginRegistrer{
        cursor:pointer;
        color: #606060;
    }
    .link-LoginRegistrer:hover{
        color:white;
    }
    .img-Pelicula{
        margin-top: 10px;
        height: 280px;
        width: 190px;
    }
    .Pelicula-card{
        width:400px;
        margin: 20px;
    }
    .Pelicula-card-container{
        width:420px;
        height:650px;
    }
    .Pelicula-card-imge{
        width:inherit;
        height:inherit;
        filter: blur(4px) brightness(70%);
    }
    .Pelicula-card-info{
        position:relative;
        top: -620px;
        left: 30px;
    }
    .TituloPelicula{
        font-size:35px;
        text-shadow: 1px 1px 2px black;
    }
    .Sinopsis{
        font-size:20px;
        text-shadow: 1px 1px 2px black;
        margin-top:40px;
        margin-bottom:40px;
    }
</style>